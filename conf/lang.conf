# language mode options - c.
cprimitive = auto
cprimitive = bool
cprimitive = char
cprimitive = const
cprimitive = double
cprimitive = enum
cprimitive = extern
cprimitive = f32
cprimitive = f64
cprimitive = false
cprimitive = float
cprimitive = i8
cprimitive = i16
cprimitive = i32
cprimitive = i64
cprimivite = inline
cprimitive = int
cprimitive = isize
cprimitive = long
cprimitive = register
cprimitive = restrict
cprimitive = short
cprimitive = signed
cprimitive = static
cprimitive = sizeof
cprimitive = struct
cprimitive = true
cprimitive = u8
cprimitive = u16
cprimitive = u32
cprimitive = u64
cprimitive = union
cprimitive = unsigned
cprimitive = usize
cprimitive = void
cprimitive = volatile
cprimitive = _Bool
cprimitive = _Complex
cprimitive = _Imaginary
ckeyword = break
ckeyword = case
ckeyword = continue
ckeyword = default
ckeyword = do
ckeyword = else
ckeyword = for
ckeyword = goto
ckeyword = if
ckeyword = return
ckeyword = switch
ckeyword = typedef
ckeyword = while

# language mode options - sh.
shkeyword = alias
shkeyword = bind
shkeyword = break
shkeyword = builtin
shkeyword = caller
shkeyword = case
shkeyword = cd
shkeyword = command
shkeyword = continue
shkeyword = coproc
shkeyword = declare
shkeyword = do
shkeyword = done
shkeyword = echo
shkeyword = elif
shkeyword = else
shkeyword = enable
shkeyword = esac
shkeyword = eval
shkeyword = exec
shkeyword = exit
shkeyword = export
shkeyword = fi
shkeyword = for
shkeyword = function
shkeyword = getopts
shkeyword = hash
shkeyword = help
shkeyword = if
shkeyword = in
shkeyword = let
shkeyword = local
shkeyword = logout
shkeyword = mapfile
shkeyword = printf
shkeyword = pwd
shkeyword = read
shkeyword = readarray
shkeyword = readonly
shkeyword = return
shkeyword = select
shkeyword = shift
shkeyword = source
shkeyword = test
shkeyword = then
shkeyword = time
shkeyword = times
shkeyword = trap
shkeyword = type
shkeyword = typeset
shkeyword = ulimit
shkeyword = umask
shkeyword = unalias
shkeyword = until
shkeyword = unset
shkeyword = while

# language mode options - py.

# language mode options - js.
jskeyword = arguments
jskeyword = as
jskeyword = async
jskeyword = await
jskeyword = break
jskeyword = case
jskeyword = catch
jskeyword = class
jskeyword = const
jskeyword = continue
jskeyword = debugger
jskeyword = default
jskeyword = delete
jskeyword = do
jskeyword = else
jskeyword = enum
jskeyword = eval
jskeyword = export
jskeyword = extends
jskeyword = false
jskeyword = finally
jskeyword = for
jskeyword = from
jskeyword = function
jskeyword = get
jskeyword = if
jskeyword = implement
jskeyword = import
jskeyword = in
jskeyword = instanceof
jskeyword = interface
jskeyword = let
jskeyword = new
jskeyword = null
jskeyword = of
jskeyword = package
jskeyword = private
jskeyword = protected
jskeyword = public
jskeyword = return
jskeyword = set
jskeyword = static
jskeyword = super
jskeyword = switch
jskeyword = this
jskeyword = throw
jskeyword = true
jskeyword = try
jskeyword = typeof
jskeyword = var
jskeyword = void
jskeyword = while
jskeyword = with
jskeyword = yield

# language mode options - cc.
ccprimitive = alignas
ccprimitive = auto
ccprimitive = bool
ccprimitive = char
ccprimitive = char8_t
ccprimitive = char16_t
ccprimitive = char32_t
ccprimitive = class
ccprimitive = concept
ccprimitive = const
ccprimitive = consteval
ccprimitive = constexpr
ccprimitive = constinit
ccprimitive = decltype
ccprimitive = double
ccprimitive = enum
ccprimitive = extern
ccprimitive = f32
ccprimitive = f64
ccprimitive = false
ccprimitive = float
ccprimitive = i8
ccprimitive = i16
ccprimitive = i32
ccprimitive = i64
ccprimitive = inline
ccprimitive = int
ccprimitive = isize
ccprimitive = long
ccprimitive = mutable
ccprimitive = nullptr
ccprimitive = register
ccprimitive = short
ccprimitive = signed
ccprimitive = struct
ccprimitive = true
ccprimitive = typename
ccprimitive = u8
ccprimitive = u16
ccprimitive = u32
ccprimitive = u64
ccprimitive = union
ccprimitive = unsigned
ccprimitive = usize
ccprimitive = virtual
ccprimitive = void
ccprimitive = volatile
ccprimitive = wchar_t
cckeyword = alignof
cckeyword = and
cckeyword = and_eq
cckeyword = asm
cckeyword = atomic_cancel
cckeyword = atomic_commit
cckeyword = atomic_noexcept
cckeyword = bitand
cckeyword = bitor
cckeyword = break
cckeyword = case
cckeyword = catch
cckeyword = compl
cckeyword = const_cast
cckeyword = continue
cckeyword = co_await
cckeyword = co_return
cckeyword = co_yield
cckeyword = default
cckeyword = delete
cckeyword = do
cckeyword = dynamic_cast
cckeyword = else
cckeyword = explicit
cckeyword = export
cckeyword = for
cckeyword = friend
cckeyword = goto
cckeyword = if
cckeyword = namespace
cckeyword = new
cckeyword = noexcept
cckeyword = not
cckeyword = not_eq
cckeyword = operator
cckeyword = or
cckeyword = or_eq
cckeyword = private
cckeyword = protected
cckeyword = public
cckeyword = reflexpr
cckeyword = reinterpret_cast
cckeyword = requires
cckeyword = return
cckeyword = sizeof
cckeyword = static
cckeyword = static_assert
cckeyword = static_cast
cckeyword = switch
cckeyword = synchronized
cckeyword = template
cckeyword = this
cckeyword = thread_local
cckeyword = throw
cckeyword = try
cckeyword = typedef
cckeyword = typeid
cckeyword = using
cckeyword = while
cckeyword = xor
cckeyword = xor_eq
